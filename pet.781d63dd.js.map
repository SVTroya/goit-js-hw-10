{"mappings":"AAEA,MAAMA,EAAc,wEACdC,EAAc,wEAwBpB,SAASC,EAAOC,GACd,OAAQA,GACN,IAAK,MAAO,OAAOH,EACnB,IAAK,MAAO,OAAOC,E,CC5BvB,MAGMG,EAAgBC,SAASC,cAAc,UACvCC,EAAkBF,SAASC,cAAc,aACzCE,EAAcH,SAASC,cAAc,kBACrCG,EAAWJ,SAASC,cAAc,aAClCI,EAAWL,SAASC,cAAc,YAClCK,EAAUN,SAASC,cAAc,WAEvC,IAAIM,EAAa,GA6DjB,SAASC,EAAQC,GACfH,EAAQI,UAAUC,OAAO,aACzBN,EAASK,UAAUE,IAAI,aACvBC,QAAQC,IAAIL,E,CA9DdM,OAAOC,iBAAiB,QAGxB,WACEX,EAASK,UAAUC,OAAO,aAC1BJ,EAAaU,aAAaC,QAAQ,aAAe,MACjDD,aAAaE,WAAW,YACxB,IAAIC,EAAa,mDACjB,OAAQb,GACN,IAAK,MAAOa,EArBG,yCAsBb,MACF,IAAK,MAAOA,EAtBG,+BAyBjBhB,EAASiB,YAAcD,GDvBGtB,ECwBdS,EDtBLe,MADW,kBAAkBxB,qBACZ,CAAEyB,QAAS,CAAEC,OAAQ,mBAAoB,YAAa3B,EAAOC,MAClF2B,MAAKC,IACN,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,OAAOC,YAElC,OAAOJ,EAASK,MAAM,KCkBrBN,MAAKO,IACJ,IAAIC,EAAe,CAAC,CAACC,IAAI,EAAIC,KAAK,KAClCF,EAAaG,QAAQJ,EAAKK,QAAOC,I,IAAWC,EAAA,OAAsB,OAAT,QAAbA,EAAAD,EAAQE,aAAK,IAAbD,OAAA,EAAAA,EAAeE,IAAW,KACtE,MAAMC,EAAgBT,EAAaU,KAAIC,GAAa,kBAAkBA,EAAUV,OAAOU,EAAUT,kBAAiBU,KAAK,IACvH9C,EAAc+C,mBAAmB,aAAcJ,GAC/CxC,EAAgBQ,UAAUC,OAAO,aACjCN,EAASK,UAAUE,IAAI,YAAY,IAEpCmC,MAAMvC,GDjCJ,IAAqBV,C,ICU5BC,EAAciB,iBAAiB,UA0B/B,UAAoBgC,QAAQC,MAACA,KAC3B,GAAc,OAAVA,EAEF,YADA9C,EAAYO,UAAUE,IAAI,aAG5BP,EAASK,UAAUC,OAAO,aAC1BT,EAAgBQ,UAAUE,IAAI,aAC9BT,EAAYO,UAAUE,IAAI,aAC1BN,EAAQI,UAAUE,IAAI,cDjCQd,ECkCdS,EDlCuB2C,ECkCXD,EDhCrB3B,MADc,kBAAkBxB,uCACXoD,EAAS,CAAE3B,QAAS,CAAEC,OAAQ,mBAAoB,YAAa3B,EAAOC,MAC/F2B,MAAKC,IACJ,IAAIA,EAASC,GACX,MAAM,IAAIC,MAAMF,EAASG,OAAOC,YAElC,OAAOJ,EAASK,MAAM,KC4BvBN,MAAKa,IACJ,IAAKA,EAAQa,OACX,OAEF,MAAMV,IAACA,EAAKW,SAASC,SAAEA,EAAQC,YAAEA,EAAWnB,KAAEA,EAAIoB,YAAEA,KAAkBjB,EAAQ,GAC9EnC,EAAYqD,UACV,gCAAgCf,WAAaN,yGAEpBA,sBACpBoB,GAAeF,GAAY,0FACyCC,sBAE3EjD,EAASK,UAAUE,IAAI,aACvBT,EAAYO,UAAUC,OAAO,aAC7BT,EAAgBQ,UAAUC,OAAO,YAAY,IAE9CoC,OAAM,SAAStC,GACdD,EAAQC,GACRP,EAAgBQ,UAAUC,OAAO,Y,IDrDhC,IAAyBb,EAASoD,C","sources":["src/js/pet-api.js","src/js/pet.js"],"sourcesContent":["import axios from 'axios'\n\nconst DOG_API_KEY = 'live_Mlq52c1ZOJh91BuIHgCjbsbMLNU9HiGamBhos6dGnoOpfCwYihzaY62fc640KidM'\nconst CAT_API_KEY = 'live_FDfPizYGe5KVsKSxrn22ndt8Htokk5XB9VMOuH7S7qFxcCFxyX8LVE81ev0QxQO8'\n\nexport function fetchBreeds(petType) {\n  const urlBreeds = `https://api.the${petType}api.com/v1/breeds`\n  return fetch(urlBreeds, { headers: { Accept: \"application/json\", 'x-api-key': getKey(petType) } })\n    .then(response => {\n    if (!response.ok) {\n      throw new Error(response.status.toString())\n    }\n    return response.json()\n  })\n}\n\nexport function fetchDogByBreed(petType, breedId) {\n  const urlBreedInfo = `https://api.the${petType}api.com/v1/images/search?breed_ids=`\n  return fetch(urlBreedInfo + breedId, { headers: { Accept: \"application/json\", 'x-api-key': getKey(petType) } })\n    .then(response => {\n      if(!response.ok) {\n        throw new Error(response.status.toString())\n      }\n      return response.json()\n    })\n}\n\nfunction getKey(petType) {\n  switch (petType) {\n    case 'dog': return DOG_API_KEY\n    case 'cat': return CAT_API_KEY\n  }\n}\n\n","import { fetchBreeds, fetchDogByBreed } from './pet-api'\n\nconst DOG_HEADER = \"You are right, DOGS are the best 😊!!!\"\nconst CAT_HEADER = \"I'm disappointed 🥺. But ok.\"\n\nconst breedSelectEl = document.querySelector('#breed')\nconst breedSelectorEl = document.querySelector('.selector')\nconst breedInfoEl = document.querySelector('div.breed-info')\nconst headerEl = document.querySelector('h1.choice')\nconst loaderEl = document.querySelector('p.loader')\nconst errorEl = document.querySelector('p.error')\n\nlet animalType = ''\n\nwindow.addEventListener('load', onLoad)\nbreedSelectEl.addEventListener('change', onSelect)\n\nfunction onLoad() {\n  loaderEl.classList.remove('is-hidden')\n  animalType = localStorage.getItem(\"pet-type\") || 'dog'\n  localStorage.removeItem(\"pet-type\")\n  let headerText = \"I don't know what an animal it is 🤷‍♀️. But ok.\"\n  switch (animalType) {\n    case 'dog': headerText = DOG_HEADER\n      break\n    case 'cat': headerText = CAT_HEADER\n      break\n  }\n  headerEl.textContent = headerText\n  fetchBreeds(animalType)\n    .then(data => {\n      let storedBreeds = [{id: -1, name:''}]\n      storedBreeds.push(...data.filter(dogInfo => dogInfo.image?.url != null))\n      const optionsMarkup = storedBreeds.map(breedInfo => `<option value='${breedInfo.id}'>${breedInfo.name}</option>`).join('')\n      breedSelectEl.insertAdjacentHTML('afterbegin', optionsMarkup)\n      breedSelectorEl.classList.remove('is-hidden')\n      loaderEl.classList.add('is-hidden')\n    })\n    .catch(onError)\n}\n\nfunction onSelect({ target: {value} }) {\n  if (value === '-1') {\n    breedInfoEl.classList.add('is-hidden')\n    return\n  }\n  loaderEl.classList.remove('is-hidden')\n  breedSelectorEl.classList.add('is-hidden')\n  breedInfoEl.classList.add('is-hidden')\n  errorEl.classList.add('is-hidden')\n  fetchDogByBreed(animalType, value)\n    .then(dogInfo => {\n      if (!dogInfo.length) {\n        return\n      }\n      const {url, breeds: [{ bred_for, temperament, name, description }]} = dogInfo[0]\n      breedInfoEl.innerHTML =\n        `<img class='animal-img' src='${url}' alt='${name}' width='400' loading='lazy'/>\n      <div class='breed-info-right'>\n        <h2 class='breed-name'>${name}</h2>\n        <p>${description || bred_for || ''}</p>\n        <p class='temper'><span class='temperament-header'>Temperament: </span>${temperament}</p>\n      </div>`\n      loaderEl.classList.add('is-hidden')\n      breedInfoEl.classList.remove('is-hidden')\n      breedSelectorEl.classList.remove('is-hidden')\n    })\n    .catch(function(error) {\n      onError(error)\n      breedSelectorEl.classList.remove('is-hidden')\n    })\n}\n\nfunction onError(error) {\n  errorEl.classList.remove('is-hidden')\n  loaderEl.classList.add('is-hidden')\n  console.log(error)\n}\n\n\n"],"names":["$24f11d6bcfc2cf23$var$DOG_API_KEY","$24f11d6bcfc2cf23$var$CAT_API_KEY","$24f11d6bcfc2cf23$var$getKey","petType","$fee5d47ff76f9b90$var$breedSelectEl","document","querySelector","$fee5d47ff76f9b90$var$breedSelectorEl","$fee5d47ff76f9b90$var$breedInfoEl","$fee5d47ff76f9b90$var$headerEl","$fee5d47ff76f9b90$var$loaderEl","$fee5d47ff76f9b90$var$errorEl","$fee5d47ff76f9b90$var$animalType","$fee5d47ff76f9b90$var$onError","error","classList","remove","add","console","log","window","addEventListener","localStorage","getItem","removeItem","headerText","textContent","fetch","headers","Accept","then","response","ok","Error","status","toString","json","data","storedBreeds","id","name","push","filter","dogInfo","ref","image","url","optionsMarkup","map","breedInfo","join","insertAdjacentHTML","catch","target","value","breedId","length","breeds","bred_for","temperament","description","innerHTML"],"version":3,"file":"pet.781d63dd.js.map"}